@{Page.Title = "Charms";
    Layout = "~/Shared/_DefaultPageAuthOnly.cshtml";

}

<!--A Charms Quiz with a submit button to submit the answers -->
<form method="post">
    <br /> <h1 class="harry-font">Quiz Charms 1</h1>
    <br />
    <br />

    <div id="quiz">
        <p>
            <strong>Question 1</strong> <br />
            An object that has a lasting charm placed on it is called:<br />
            <input type="radio" value="correct" name="vraag1">&nbsp;&nbsp;Bewitched<br />
            <input type="radio" value="wrong" name="vraag1">&nbsp;&nbsp;Enchanted<br />
            <input type="radio" value="wrong" name="vraag1">&nbsp;&nbsp;Charmed<br />
            <input type="radio" value="wrong" name="vraag1">&nbsp;&nbsp;Captivated<br />
        </p>
        <p>
            <strong>Question 2</strong> <br />
            What is the difference between a charm and a transfiguration?<br />
            <input type="radio" value="correct" name="vraag2">&nbsp;&nbsp;A charm is a spell that adds certain properties to an object or creature, transfiguration changes the object/creature itself<br />
            <input type="radio" value="wrong" name="vraag2">&nbsp;&nbsp;A transfiguration is a spell that adds certain properties to an object or creature, a charm changes the object/creature itself.<br />

        </p>
        <p>
            <strong>Question 3</strong><br />
            Charms can be some of the most powerful and game-changing spells in existence.<br />
            <input type="radio" value="correct" name="vraag3">&nbsp;&nbsp;True<br />
            <input type="radio" value="wrong" name="vraag3">&nbsp;&nbsp;False<br />

        </p>
        <p>
            <strong>Question 4</strong><br />
            What happens when a charm is casted poorly?<br />
            <input type="radio" value="correct" name="vraag4">&nbsp;&nbsp;When a charm is casted poorly it will fail and the caster runs the risk of it backfiring<br />
            <input type="radio" value="wrong" name="vraag4">&nbsp;&nbsp;When a charm is casted poorly it will fail and nothing will happen.<br />
            <input type="radio" value="wrong" name="vraag4">&nbsp;&nbsp;When a charm is casted poorly it will backfire the caster.<br />
            <input type="radio" value="wrong" name="vraag4">&nbsp;&nbsp;When a charm is casted poorly it will cast a random spell.<br />
        </p>
        <p>
            <strong>Question 5</strong><br />
            Successful casting of a charm is achieved through:<br />
            <input type="radio" value="wrong" name="vraag5">&nbsp;&nbsp;Concentration<br />
            <input type="radio" value="wrong" name="vraag5">&nbsp;&nbsp;Precise wand movements<br />
            <input type="radio" value="wrong" name="vraag5">&nbsp;&nbsp;Proper pronunciation <br />
            <input type="radio" value="correct" name="vraag5">&nbsp;&nbsp;All of the above<br />
        </p>
        <br />
        <br />
        <button type="submit" id="submitbutton" class="btn btn-secondary" style="color:black"> &nbsp; SUBMIT &nbsp;  </button>
    </div>

    @{
        /*Results  will only shown if none of the radiobutton groups have a value of null.
        If thats the case, the variable "score" will increase by 1 for each radiobutton value of ''correct''
        Pressing submit will hide the quiz, display the quiz results and show a button to return to lesson overview
        */

        var kek = 1;
        double score = 0;
        if (Request["vraag1"] == null || Request["vraag2"] == null || Request["vraag3"] == null || Request["vraag4"] == null || Request["vraag5"] == null)
        { kek -= 1; }
        else
        {

            if (Request["vraag1"] == "correct") { score += 1; }
            if (Request["vraag2"] == "correct") { score += 1; }
            if (Request["vraag3"] == "correct") { score += 1; }
            if (Request["vraag4"] == "correct") { score += 1; }
            if (Request["vraag5"] == "correct") { score += 1; }
        }

        double procentgoed = score / 5 * 100;

        if (procentgoed >= 55)
        {
            User user = UserController.GetUserById(AuthController.LoginId);
            House house = HouseController.GetHouseById(user.House);

            int points = 1;

            if (procentgoed > 75)
            {
                points++;
            }

            if (procentgoed > 90)
            {
                points++;
            }

            HouseController.IncrementMemberPoints(house, points);
            UserController.IncrementUserPoints(user, points);
        }

        if (kek == 0)
        { <p> Be sure to fill in everything!</p>}
        else
        {
            <p>You answered @score/5 (@procentgoed%) of the questions correctly</p> if (score >= 3)
            { <P>Good job!</P>}
            else
            {<p>Better luck next time! </p>}


            <a href="~/LesOverzicht.cshtml"><p>Click here to go back to Lesson overview</p></a>

            <style>

                #quiz {
                    display: none
                }
            </style>
        }
    }

</form>