@{
    Page.Title = "Login";
    Layout = "~/Shared/_DefaultPage.cshtml";
    string uUname = "";
    string uPassword = "";
    bool hasPost = false;

    //Validation rules
    Validation.Add("uUname",
        Validator.Required("Username cannot be empty"),
        Validator.StringLength(32, 6, "Username is too long or too short"),
        Validator.Regex(@"^[A-Za-z0-9_.]+$", "Usernames contains illegal characters")
    );

    Validation.Add("uPassword",
        Validator.Required("Password cannot be empty"),
        Validator.StringLength(1024, 6, "The given password is too short")
    );

    if (IsPost)
    {
        hasPost = true;

        bool isValid = true;

        //Check if the validation rules are valid.
        if (!Validation.IsValid())
        {
            isValid = false;
        }

        if (isValid)
        {
            //Hier wordt de username & password opgevraagd. 
            uUname = Request.Form["uUname"];
            uPassword = Request.Form["uPassword"];

            //Request login, get the state back.
            LoginState loginState = AuthController.Login(uUname, uPassword);

            switch(loginState)
            {
                //We logged in, create session, redirect to member portal.
                case LoginState.Ok:
                    Session["user_loggedin"] = true;
                    Session["user_id"] = AuthController.LoginId;

                    Response.Redirect("~/Portal.cshtml");
                    break;
                //Some fatal error occured :(
                case LoginState.Failed:
                    Response.Redirect("~/500.cshtml");
                    break;
                //Login username/password was not correct.
                case LoginState.Incorrect:
                    Validation.AddFormError("The given information seems to be incorrect.");
                    break;
            }
        }
    }
}


<div class="col-md-12" align="center">
    <div class="row vm-1">
        <h1 class="harry-font">Login</h1>
    </div>

    <div class="row vm-1">
        <p>
            The train to hogwarts is leaving in about 5 minutes, be quick!
        </p>
    </div>

    <div class="row vm-3">
        <div class="contact-form col-md-offset-3 col-md-6" align="left">

            @Html.ValidationSummary(true)

            <form method="post">
                @AntiForgery.GetHtml()
                <div class="form-group">
                    <label class="form-label" for="uUname">Username</label>
                    <input name="uUname" class="form-control" @Validation.For("uUname") required>
                    @FormHelper.GetFormFieldError("uUname", Validation.IsValid("uUname"), hasPost)
                </div>
                <div class="form-group">
                    <label class="form-label" for="uPassword">Password</label>
                    <input type="password" name="uPassword" class="form-control" @Validation.For("uPassword") required>
                    @FormHelper.GetFormFieldError("uPassword", Validation.IsValid("uPassword"), hasPost)
                </div>

                <div class="custom-control">
                    <input type="checkbox" name="uRemember">
                    <label class="custom-control-label form-label" for="uRemember">Remember me</label>
                </div>

                <button type="submit" class="btn btn-secondary vm-1">Login!</button>
            </form>
        </div>
    </div>
</div>